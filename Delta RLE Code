nt main (int argc, char * argv[]) { // ARGUMENT COUNT AND VALUES
    
    int length =303;
         ///////// //Reading the string///////

     
    int string[303] = {1917,1921,1929,1927,1922,1917,1924,1929,1928,1925,1918,1922,1931,1932,1924,1917,1920,1927,1927,1921,1916,1915,1925,1930,1927,1918,1915,1925,1928,1930,1919,1913,1924,1928,1931,1928,1916,1922,1929,1931,1924,1915,1916,1926,1931,1924,1918,1914,1924,1928,1926,1920,1917,1926,1928,1931,1924,1920,1926,1928,1933,1928,1917,1921,1933,1933,1930,1915,1918,1924,1930,1925,1918,1913,1922,1929,1927,1919,1915,1923,1927,1931,1925,1922,1922,1928,1935,1928,1920,1919,1926,1930,1927,1923,1916,1924,1929,1928,1924,1916,1921,1603,1601,1612,1620,1618,1606,1604,1611,1618,1620,1607,1603,1612,1619,1619,1607,1602,1609,1615,1618,1609,1599,1606,1615,1620,1611,1601,1605,1611,1622,1615,1601,1605,1612,1622,1623,1605,1605,1610,1618,1619,1607,1601,1607,1618,1620,1610,1600,1605,1613,1620,1613,1604,1607,1611,1621,1618,1610,1609,1611,1622,1621,1608,1606,1613,1620,1625,1608,1606,1607,1615,1618,1613,1601,1603,1612,1618,1614,1604,1605,1609,1618,1619,1613,1608,1609,1619,1622,1612,1604,1606,1613,1618,1616,1604,1604,1613,1619,1619,1605,1605,1624,1614,1606,1610,1624,1623,1619,1605,1608,1623,1624,1620,1607,1610,1618,1624,1620,1608,1608,1615,1624,1619,1611,1608,1612,1624,1620,1613,1605,1613,1623,1620,1615,1606,1613,1625,1621,1619,1606,1609,1620,1625,1619,1608,1611,1617,1627,1619,1611,1608,1613,1626,1623,1618,1606,1612,1625,1628,1621,1604,1611,1621,1624,1623,1608,1610,1620,1624,1623,1611,1608,1613,1626,1620,1615,1608,1610,1623,1624,1623,1607,1610,1618,1625,1625,1610,1608,1614,1624,1623,1615,1603,1612,1624,1623,1615,1605,1609,1622,1623,1620};
    CyGlobalIntEnable; /* Enable global interrupts. */
       UART_1_Start();
    void compressRLE();
       
     
 UART_1_PutString("\n Delta Compression and Decompression \n");

   
    for(int i=0 ; i<303 ; i++)
    {
        sprintf(TransmitBuffer, "%d,", string[i]);
        UART_1_PutString(TransmitBuffer);
        
    }
//UART_1_PutString("String:\t");
//UART_1_PutString(string);

//    size_t size = sizeof(string);
//    size_t length = strlen((char *) string);


                //////////Length////////
//    
//UART_1_PutString("\n");
//    UART_1_PutString("length:\t");
//sprintf(TransmitBuffer, "%d", length);
//UART_1_PutString(TransmitBuffer);
//    
//                   //////////Size////////
//
//    UART_1_PutString("\n");
//   UART_1_PutString("Size:\t");
//           sprintf(TransmitBuffer, "%d", size);
//           UART_1_PutString(TransmitBuffer);
    
//                   ////////////ASCII///////
//
//    UART_1_PutString("\n");
//    UART_1_PutString("ASCII:\t");
//    for (unsigned int i = 0; i < length; ++i) 
//    {
//        sprintf(TransmitBuffer, "%u\t", string[i]);
//         UART_1_PutString(TransmitBuffer);
//    }
//
//                    /////////Hex////////
//
//    UART_1_PutString("\n");
//    UART_1_PutString("Hex:\t");
//    for (unsigned int i = 0; i < length; ++i) 
//    {
//                sprintf(TransmitBuffer, "0x%02x\t", string[i]);
//                UART_1_PutString(TransmitBuffer);
//    }
//    
//                ///////Char///////
//                
//     UART_1_PutString("\n");
//    UART_1_PutString("Char:\t");
//    for (unsigned int i = 0; i < length; ++i)
//    {
//                sprintf(TransmitBuffer, "%c\t", string[i]);
//                UART_1_PutString(TransmitBuffer);
//                
//    }
    
       UART_1_PutString("\n");
delta_encode(string, length);
  
    UART_1_PutString("\n");
    UART_1_PutString("Code:\t");
    for (unsigned int i = 0; i < length; ++i) 
    {
           sprintf(TransmitBuffer, "%i,", string[i]);
           UART_1_PutString(TransmitBuffer);
 
    }
//
//    UART_1_PutString("\n");
//
//UART_1_PutString("Hex\t");
//    for (unsigned int i = 0; i < length; ++i) 
//    {
//           sprintf(TransmitBuffer, "0x%02hhx\t", string[i]);
//                UART_1_PutString(TransmitBuffer);
//               
//    }
//     
//
//UART_1_PutString("\n");
//
//    UART_1_PutString("Delta Decoded:\n");
//    delta_decode(string, length);
//   UART_1_PutString(string);
//       for (unsigned int i = 0; i < length; ++i) 
//    {
//           sprintf(TransmitBuffer, "%i,", string[i]);
//           UART_1_PutString(TransmitBuffer);
// 
//    }
     UART_1_PutString("RLE Encoding:\n");
    compressRLE(string);
//    UART_1_PutString(string);
       for (unsigned int i = 0; i < length; ++i) 
    {
           sprintf(TransmitBuffer, "%i,", string[i]);
           UART_1_PutString(TransmitBuffer);
 
    }
    
    
    return 0;
}
